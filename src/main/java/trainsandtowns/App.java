/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package trainsandtowns;

import java.util.ArrayList;
import java.util.Scanner;

public class App {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.println();
        System.out.println();
        System.out.println("Please, enter format string (AB5) where A is town A, B town B and 5 the distance between the 2,");
        System.out.println("Example: AB5,BC4,CD8,DC8,DE6,AD5,CE2,EB3,AE7");
        String strIn = scanner.next();
        strIn = strIn.replace(" ", "");
        System.out.println("INPUT DATA: " + strIn);
        if (!validate(strIn)) {
            return;
        }
        System.out.println();
        System.out.println("-----------------------");
        System.out.println("      RESULTS");
        System.out.println("-----------------------");
        Graph graph = new Graph(strIn);
        System.out.println("Output #1: " + graph.getDistance("ABC"));
        System.out.println("Output #2: " + graph.getDistance("AD"));
        System.out.println("Output #3: " + graph.getDistance("ADC"));
        System.out.println("Output #4: " + graph.getDistance("AEBCD"));
        System.out.println("Output #5: " + graph.getDistance("AED"));
        System.out.println("Output #6: " + graph.calculateTripsCount("C", "C", t -> t <= 3, 3));
        System.out.println("Output #7: " + graph.calculateTripsCount("A", "C", t -> t == 4, 4));
        System.out.println("Output #8: " + graph.calculateShortRoute("A", "C"));
        System.out.println("Output #9: " + graph.calculateShortRoute("B", "B"));
        System.out.println("Output #10: " + graph.calculateRoutesCount("C", "C", 30));
    }

    private static Boolean validate(String strIn) {
        String inFormat = "Please input data format: 'AB5,BC4,CD8,DC8,DE6,AD5,CE2,EB3,AE7'";

        ArrayList<String> aux = new ArrayList<>();
        if (strIn.length() < GlobalValues.LENGTH_ARRAY_INPUT_MIN) {
            System.out.println("ERROR" + inFormat);
            return false;
        }
        String[] strin = strIn.split(",");
        if (strin.length == 0) {
            System.out.println("ERROR" + inFormat);
            return false;
        }
        for (String str : strin) {
            str = str.trim();
            if (str.length() < GlobalValues.LENGTH_MIN || str.length() > GlobalValues.LENGTH_MAX) {
                System.out.println("ERROR: " + inFormat);
                return false;
            }
            for (int i = 0; i <= 1;i++) {
                if (!GlobalValues.CHAR_LIST_INPUT.contains(str.substring(i, i++))) {
                    System.out.println("Rango Towns [ABCDE] " + str.substring(i, i++));
                    System.out.println("ERROR: " + inFormat);
                    return false;
                }
            }
            if (str.substring(0, 1).contains(str.substring(1, 2))) {
                System.out.println("Equal Towns " + str.substring(0, 2));
                System.out.println("ERROR: " + inFormat);
                return false;
            }
            if (aux.contains(str.substring(0, 2))) {
                System.out.println("Repeated Route " + str.substring(0, 2));
                System.out.println("ERROR: " + inFormat);
                return false;
            }
            aux.add(str.substring(0, 2));
            for (int i = 2; i <= str.length() - 1; ++i) {
                if (!str.substring(i, i + 1).matches("^[1-9]\\d*$")) {
                    System.out.println("Distances Rango [1-9] " + str.substring(i, i++));
                    System.out.println("ERROR: " + inFormat);
                    return false;
                }
            }
        }
        return true;
    }
}
